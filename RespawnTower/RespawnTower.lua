--[=====[
This script is insprired by Fretbots and Buff. It runs in conjuction with the bot script. It make sure that the tier 4 tower will always auto-respawn, until a certain moment (for example after 60 minutes of the game), to ensure the game can go into late games.

I am also looking forward to add the function of using console commands to respawn towers.

# To Use (for anyone randomly finding this)
1. Launch DotA 2 with console enabled.
2. For local host only, so Create a Lobby. Make sure that `Enable Cheats` is checked.
3. After the map finished loading, open the console, and type: `sv_cheats 1; script_reload_code bots/RespawnTower/RespawnTower`.
4. The script is now running (The last command should only be run once).

It can be used with other bot scripts, just change some stuff accordingly, to suit whichever script.

It would've been nice to call this within the bot script, but I don't think it is possible.
--]=====]

require("bots.RespawnTower.OnEntityKilledForRespawnTower")
require("bots.RespawnTower.OnEntityHurtForRespawnTower")
require("bots.RespawnTower.OnPlayerChat")

EntityKilledForRespawnTower:RegisterEvents()
EntityHurtForRespawnTower:RegisterEvents()
OnPlayerChat:RegisterEvents()

-- if RespawnTowerMain == nil then
--     RespawnTowerMain = {}
-- end

-- -- Define the respawn function for buildings
-- function RespawnBuilding(buildingName, position, team)
--     local building = CreateUnitByName(buildingName, position, true, nil, nil, team)
--     if building then
--         building:AddNewModifier(nil, nil, "modifier_invulnerable", {})
--     end
-- end

-- -- Example function to respawn towers
-- function RespawnTowers()
--     -- Specify the positions and names of the towers to respawn
--     local towers = {
--         {
--             name = "npc_dota_goodguys_tower1_top",
--             position = Vector(-6000, -4000, 128),
--             team = DOTA_TEAM_GOODGUYS
--         },
--         {
--             name = "npc_dota_badguys_tower1_top",
--             position = Vector(6000, 4000, 128),
--             team = DOTA_TEAM_BADGUYS
--         }
--         -- Add more towers as needed
--     }

--     for _, tower in pairs(towers) do
--         RespawnBuilding(tower.name, tower.position, tower.team)
--     end
-- end

-- -- Call the function to respawn towers (example: after a certain event or timer)
-- function Activate()
--     GameRules:GetGameModeEntity():SetThink("OnThink", self, 1)
-- end

-- function GameMode:OnThink()
--     -- Call the respawn function based on your game's logic
--     RespawnTowers()
--     return 10 -- Adjust the return value to control the think interval
-- end

-- function RespawnTowerMain:Init()
--     if DotaTime() > 5 * 60 and DotaTime() < 60 * 60 then
--         RespawnTowers()
--     end
-- end

-- RespawnTowerMain:Init()

-- -- Generated by AI:
-- function RespawnTower(team, towerType)
--     -- Get the position of the tower
--     local tower = GetTower(team, towerType)

--     if tower and tower:IsNull() then
--         -- If tower does not exist, find the position where it should be respawned
--         local towerPosition = GetTowerPosition(team, towerType)

--         -- Check if the position is valid
--         if towerPosition then
--             -- Respawn the tower
--             CreateUnitByName(tower:GetUnitName(), towerPosition, true, nil, nil, team)
--             print("Tower respawned at: ", towerPosition)
--         else
--             print("Could not find the tower position for: ", towerType)
--         end
--     else
--         print("Tower is already present or invalid towerType")
--     end
-- end

-- function GetTowerPosition(team, towerType)
--     -- Define approximate positions for towers. These may need adjustment.
--     local positions = {
--         [DOTA_TEAM_GOODGUYS] = {
--             [TOWER_BASE_1] = Vector(-1910, -1720, 128),
--             [TOWER_BASE_2] = Vector(-1720, -1910, 128),
--         },
--         [DOTA_TEAM_BADGUYS] = {
--             [TOWER_BASE_1] = Vector(1910, 1720, 128),
--             [TOWER_BASE_2] = Vector(1720, 1910, 128),
--         }
--     }

--     if positions[team] and positions[team][towerType] then
--         return positions[team][towerType]
--     else
--         return nil
--     end
-- end

-- -- Example usage:
-- -- Respawn Radiant's first Tier 4 tower
-- RespawnTower(DOTA_TEAM_GOODGUYS, TOWER_BASE_1)
-- RespawnTower(DOTA_TEAM_GOODGUYS, TOWER_BASE_2)

-- -- Respawn Dire's second Tier 4 tower
-- RespawnTower(DOTA_TEAM_BADGUYS, TOWER_BASE_1)
-- RespawnTower(DOTA_TEAM_BADGUYS, TOWER_BASE_2)
